{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","hex2rgb","color","hexCode","rgbArr","test","split","i","length","push","parseInt","defaultColor","useState","bgText","bgColor","rgbText","form","setForm","document","body","style","backgroundColor","className","id","name","value","onChange","evt","target","rgb","prevForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yOAiEeA,MA9Df,WAEE,IAAMC,EAAU,SAAAC,GACd,IAAIC,EAAUD,EACVE,EAAS,GACb,GAAG,qBAAqBC,KAAKF,GAAS,CAClCA,EAAUA,EAAQG,MAAM,KAAK,IAAMH,EACnC,IAAI,IAAII,EAAE,EAAGA,EAAEJ,EAAQK,OAAOD,GAAG,EAC7BH,EAAOK,KAAKC,SAASP,EAAQI,GAAKJ,EAAQI,EAAE,GAAI,KAEpD,MAAO,OAASH,EAAS,IAGzB,OAAO,GAIPO,EAAe,UAErB,EAAwBC,mBAAS,CAC/BC,OAAQF,EACRG,QAASH,EACTI,QAASd,EAAQU,KAHnB,mBAAOK,EAAP,KAAaC,EAAb,KA6BA,OAFAC,SAASC,KAAKC,MAAMC,gBAAkBL,EAAKF,QAGzC,qBAAKQ,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACI,qBAAKA,UAAU,wBAAf,SACE,iCACE,uBAAOC,GAAG,WAAWC,KAAK,WAAWC,MAAOT,EAAKH,OAAQa,SA5BjD,SAAAC,GAClB,IAAMF,EAAQE,EAAIC,OAAOH,MACzB,GAAoB,IAAjBA,EAAMjB,OAAc,CACrB,IACIM,EACAC,EAFEc,EAAM5B,EAAQwB,GAIjBI,GACDf,EAAUW,EACVV,EAAUc,IAEVf,EAAU,UACVC,EAAU,yCAGZE,GAAQ,SAAAa,GAAQ,kCAASA,GAAT,IAAmBjB,OAAQY,EAAOX,QAASA,EAASC,QAASA,YAE7EE,GAAQ,SAAAa,GAAQ,kCAASA,GAAT,IAAmBjB,OAAQY,EAAOX,QAASH,EAAcI,QAAS,YAY1E,iCAASC,EAAKD,oBC7CbgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.b46c6932.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  \n  const hex2rgb = color => {\n    let hexCode = color\n    let rgbArr = []\n    if(/^#?[A-Fa-f0-9]{6}$/.test(hexCode)){\n        hexCode = hexCode.split(\"#\")[1] || hexCode\n        for(let i=0; i<hexCode.length;i+=2){\n            rgbArr.push(parseInt(hexCode[i] + hexCode[i+1], 16));\n        }\n        return \"rgb(\" + rgbArr + \")\"\n    }\n    else{\n        return false\n    }\n  }\n\n  const defaultColor = '#34495e'\n  \n  const [form, setForm] = useState({\n    bgText: defaultColor,\n    bgColor: defaultColor,\n    rgbText: hex2rgb(defaultColor),\n  })\n\n  const changeInput = evt => {\n    const value = evt.target.value\n    if(value.length === 7) {\n      const rgb = hex2rgb(value)\n      let bgColor\n      let rgbText\n\n      if(rgb) {\n        bgColor = value\n        rgbText = rgb\n      } else {\n        bgColor = '#e94b35'\n        rgbText = 'Ошибка!'\n      }\n\n      setForm(prevForm => ({...prevForm, bgText: value, bgColor: bgColor, rgbText: rgbText}))\n    } else {\n      setForm(prevForm => ({...prevForm, bgText: value, bgColor: defaultColor, rgbText: ' '}))\n    }\n  }\n\n  document.body.style.backgroundColor = form.bgColor\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <div className=\"App-colorpicker-block\">\n            <form>\n              <input id=\"bg-color\" name=\"bg_color\" value={form.bgText} onChange={changeInput}></input>\n              <button>{form.rgbText}</button>\n            </form>\n          </div>   \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}